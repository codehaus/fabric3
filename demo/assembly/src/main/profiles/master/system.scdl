<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.    
-->
<!--
    Default system configuration for the launcher environment.

    $Rev$ $Date$
-->
<composite xmlns="http://www.osoa.org/xmlns/sca/1.0"
           xmlns:system="http://fabric3.org/xmlns/sca/system/2.0-alpha"
           name="org.fabric3.launcher.System"
           autowire="true">

    <!-- Component that provides the Deployer service -->
    <component name="deployer">
        <system:implementation.system class="org.fabric3.fabric.deployer.DeployerImpl"/>
    </component>

    <component name="distributedAssembly">
        <system:implementation.system class="org.fabric3.fabric.assembly.DistributedAssemblyImpl"/>
    </component>

    <component name="wireResolver">
        <system:implementation.system class="org.fabric3.fabric.assembly.resolver.DefaultWireResolver"/>
    </component>

    <component name="promotionNormalizer">
        <system:implementation.system class="org.fabric3.fabric.assembly.normalizer.PromotionNormalizerImpl"/>
    </component>
    
    <component name="runtimeRoutingService">
        <system:implementation.system class="org.fabric3.fabric.services.routing.RuntimeRoutingService"/>
    </component>

    <component name="runtimeRoutingService">
        <system:implementation.system class="org.fabric3.fabric.services.routing.RuntimeRoutingService"/>
    </component>

    <component name="generatorRegistry">
        <system:implementation.system class="org.fabric3.fabric.generator.GeneratorRegistryImpl"/>
    </component>

    <component name="javaGenerator">
        <system:implementation.system class="org.fabric3.fabric.implementation.java.JavaComponentGenerator"/>
    </component>

    <component name="launchedGenerator">
        <system:implementation.system
                class="org.fabric3.runtime.standalone.host.implementation.launched.LaunchedComponentGenerator"/>
    </component>

    <component name="physicalComponentBuilderRegistry">
        <system:implementation.system
                class="org.fabric3.fabric.builder.component.DefaultComponentBuilderRegistry"/>
    </component>

    <component name="javaPhysicalComponentBuilder">
        <system:implementation.system class="org.fabric3.fabric.implementation.java.JavaComponentBuilder"/>
    </component>

    <component name="wireAttacherRegistryImpl">
        <system:implementation.system class="org.fabric3.fabric.builder.component.WireAttacherRegistryImpl"/>
    </component>

    <component name="defaultIFProviderBuilderRegistry">
        <system:implementation.system
                class="org.fabric3.fabric.component.instancefactory.impl.DefaultIFProviderBuilderRegistry"/>
    </component>

    <component name="reflectiveIFProviderBuilder">
        <system:implementation.system
                class="org.fabric3.fabric.component.instancefactory.impl.ReflectiveIFProviderBuilder"/>
    </component>

    <!-- JXTA Messaging Service -->
    <component name="jxtaMessagingService">
        <system:implementation.system class="org.fabric3.messaging.jxta.JxtaMessagingService"/>
        <property name="tcpPort">2000</property>
    </component>
    
    <!-- JXTA Network Configurator -->
    <component name="jxtaNetworkConfigurator">
        <system:implementation.system class="net.jxta.platform.NetworkConfigurator"/>
    </component>

    <!-- Wire service -->
    <component name="proxyService">
        <system:implementation.system class="org.fabric3.fabric.wire.jdk.JDKProxyService"/>
    </component>

    <!-- Resource host registry -->
    <component name="resourceHostRegistry">
        <system:implementation.system class="org.fabric3.fabric.services.host.DelegatingResourceHostRegistry"/>
    </component>

    <!-- Loader and LoaderRegistry -->
    <component name="loader">
        <system:implementation.system class="org.fabric3.fabric.loader.LoaderRegistryImpl"/>
    </component>

    <!-- Introspector and IntrospectionRegistry -->
    <component name="interfaceProcessorRegistry">
        <system:implementation.system class="org.fabric3.fabric.implementation.IntrospectionRegistryImpl"/>
    </component>

    <!-- Connector infrastructure -->
    <component name="connector">
        <system:implementation.system class="org.fabric3.fabric.builder.ConnectorImpl"/>
    </component>

    <component name="interceptorBuilderRegistry">
        <system:implementation.system
                class="org.fabric3.fabric.builder.interceptor.InterceptorBuilderRegistryImpl"/>
    </component>

    <component name="wireAttacherRegistry">
        <system:implementation.system
                class="org.fabric3.fabric.builder.component.WireAttacherRegistryImpl"/>
    </component>

    <!-- Default scopes -->
    <component name="scope.stateless">
        <system:implementation.system class="org.fabric3.fabric.component.scope.StatelessScopeContainer"/>
    </component>

    <!-- include loader configuration -->
    <include name="org.fabric3.fabric.Loader" scdlResource="org/fabric3/fabric/loader.scdl"/>

    <!-- include implementation processor configuration -->
    <include name="org.fabric3.fabric.Implementation" scdlResource="org/fabric3/fabric/implementation.scdl"/>

    <!-- Java interface definition language -->
    <include name="org.fabric3.fabric.InterfaceJava" scdlResource="org/fabric3/fabric/interfaceJava.scdl"/>

    <!-- include omposite implementation type -->
    <include name="org.fabric3.fabric.Composite" scdlResource="org/fabric3/fabric/composite.scdl"/>

    <!-- System implementation type -->
    <include name="org.fabric3.fabric.SystemImplementation" scdlResource="org/fabric3/fabric/systemImplementation.scdl"/>

    <!-- Pojo implementation type -->
    <include name="org.fabric3.fabric.PojoImplementation" scdlResource="org/fabric3/fabric/pojoImplementation.scdl"/>

    <!-- Java implementation type -->
    <include name="org.fabric3.fabric.JavaImplementation" scdlResource="org/fabric3/fabric/javaImplementation.scdl"/>

    <!-- include deployment configuration -->
    <include name="org.fabric3.fabric.Deployment" scdlResource="org/fabric3/fabric/deployment.scdl"/>
    
    <!-- service for resolving artifacts using Maven repositories -->
    <component name="artifactRepository">
        <system:implementation.system class="org.fabric3.maven.MavenArtifactRepository"/>
        <!-- JFM FIXME
            <property name="remoteRepoUrl">http://repo1.maven.org/maven2/,http://people.apache.org/repo/m2-snapshot-repository,http://people.apache.org/repo/m2-incubating-repository/,http://people.apache.org/repo/m1-snapshot-repository/</property>
        -->
    </component>

    <!-- WorkScheduler service -->
    <component name="workManager">
        <system:implementation.system
                class="org.fabric3.fabric.services.work.jsr237.workmanager.ThreadPoolWorkManager"/>
        <!-- JFM FIXME
        <property name="poolSize">10</property>   -->
    </component>

    <component name="workSchCompositeContextImplTestCaseeduler">
        <system:implementation.system class="org.fabric3.fabric.services.work.jsr237.Jsr237WorkScheduler"/>
    </component>

    <!-- component that scans the extension directory -->
    <component name="directoryScanExtender" initLevel="90">
        <system:implementation.system class="org.fabric3.runtime.standalone.host.DirectoryScanExtender"/>
        <!-- JFM FIXME
        <property name="path">extensions</property>
        -->
    </component>

    <component name="artifactRepository">
        <system:implementation.system class="org.fabric3.fabric.services.artifact.LocalMavenRepository"/>
        <!-- JFM FIXME
        <property name="repository">.m2/repository</property>
        -->
    </component>

    <component name="launchedLoader">
        <system:implementation.system class="org.fabric3.runtime.standalone.host.implementation.launched.LaunchedLoader"/>
    </component>

    <component name="launchedComponentLoader">
        <system:implementation.system class="org.fabric3.runtime.standalone.host.implementation.launched.LaunchedComponentTypeLoader"/>
    </component>

    <component name="wiringExceptionFormatter">
        <system:implementation.system class="org.fabric3.fabric.builder.WiringExceptionFormatter"/>
    </component>

    <component name="wiringExceptionFormatter">
        <system:implementation.system class="org.fabric3.fabric.builder.WiringExceptionFormatter"/>
    </component>

    <component name="loaderExceptionFormatter">
        <system:implementation.system class="org.fabric3.fabric.loader.LoaderExceptionFormatter"/>
    </component>

    <component name="incompatibleServiceContractExceptionFormatter">
        <system:implementation.system class="org.fabric3.fabric.wire.IncompatibleServiceContractExceptionFormatter"/>
    </component>
    
    <!-- Marshhaler registry-->
    <component name="marshallerRegistry">
        <system:implementation.system
                class="org.fabric3.fabric.marshaller.xstream.XStreamMarshallerRegistry"/>
    </component> 
    
    <!-- Console -->
    <include name="org.apache.tuscany.sca.console" scdlResource="org/fabric3/console/console.scdl"/>
    
    <!-- Jetty service -->
    <component name="JettyService">
            <system:implementation.system class="org.fabric3.jetty.JettyServiceImpl"/>
    </component>
    
</composite>
